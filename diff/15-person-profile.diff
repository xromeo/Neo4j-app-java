diff --git a/src/main/java/neoflix/services/PeopleService.java b/src/main/java/neoflix/services/PeopleService.java
index a3970eb..f3ce092 100644
--- a/src/main/java/neoflix/services/PeopleService.java
+++ b/src/main/java/neoflix/services/PeopleService.java
@@ -73,9 +73,24 @@ public class PeopleService {
      */
     // tag::findById[]
     public Map<String, Object> findById(String id) {
-        // TODO: Find a user by their ID
+        // Open a new database session
+        try (var session = driver.session()) {
 
-        return people.stream().filter(p -> id.equals(p.get("tmdbId"))).findAny().get();
+            // Get a person from the database
+            var person = session.executeRead(tx -> {
+                        String query = """
+                                    MATCH (p:Person {tmdbId: $id})
+                                    RETURN p {
+                                        .*,
+                                        actedCount: size((p)-[:ACTED_IN]->()),
+                                        directedCount: size((p)-[:DIRECTED]->())
+                                    } AS person
+                                """;
+                        var res = tx.run(query, Values.parameters("id", id));
+                        return res.single().get("person").asMap();
+                    });
+            return person;
+        }
     }
     // end::findById[]
 
@@ -89,9 +104,26 @@ public class PeopleService {
      */
     // tag::getSimilarPeople[]
     public List<Map<String,Object>> getSimilarPeople(String id, Params params) {
-        // TODO: Get a list of similar people to the person by their id
+        // Open a new database session
+        try (var session = driver.session()) {
+
+            // Get a list of similar people to the person by their id
+            var res = session.executeRead(tx -> tx.run("""
+                    MATCH (:Person {tmdbId: $id})-[:ACTED_IN|DIRECTED]->(m)<-[r:ACTED_IN|DIRECTED]-(p)
+                    RETURN p {
+                        .*,
+                        actedCount: size((p)-[:ACTED_IN]->()),
+                        directedCount: size((p)-[:DIRECTED]->()),
+                        inCommon: collect(m {.tmdbId, .title, type: type(r)})
+                    } AS person
+                    ORDER BY size(person.inCommon) DESC
+                    SKIP $skip
+                    LIMIT $limit
+                    """,Values.parameters("id",id, "skip", params.skip(), "limit", params.limit()))
+                    .list(row -> row.get("person").asMap()));
 
-        return AppUtils.process(people, params);
+            return res;
+        }
     }
     // end::getSimilarPeople[]
 
